name: Release tagged package

on: [workflow_dispatch]

defaults:
  run:
    shell: bash

jobs:
  pylint:
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    uses: ./.github/workflows/define-pylint.yml
    with:
      python-version: ${{ matrix.python-version }}
    secrets: inherit

  pytest:
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    uses: ./.github/workflows/define-pytest.yml
    with:
      python-version: ${{ matrix.python-version }}
    secrets: inherit

  tag:
    runs-on: self-hosted
    outputs:
      release-tag: ${{ steps.read-tag.outputs.release-tag }}
    steps:
    - uses: actions/checkout@v3
    - name: Read tag from __init__.py
      id: read-tag
      run: |
        TAG=$(sed -n -e '/version/ s/.*\= *//p' pyproject.toml | tr -d '"' | cut -d 'r' -f1)
        echo $TAG
        echo "release-tag=$(echo $TAG)" >> $GITHUB_OUTPUT
    - uses: mukunku/tag-exists-action@v1.6.0
      id: check-tag
      with: 
        tag: ${{ steps.read-tag.outputs.release-tag }}
    - name: Fail if tag exists
      run: |
        echo "Tag ${{ steps.read-tag.outputs.release-tag }} exists!"
        exit 1
      if: steps.check-tag.outputs.exists == 'true' 
    - name: Print tag if it doesn't exist
      run: |
        echo "Tag ${{ steps.read-tag.outputs.release-tag }} doesn't yet exist and can be created"
      if: steps.check-tag.outputs.exists == 'false' 

  build:
    needs: [tag]
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
        if [ -f requirements.txt ]; then pip install --upgrade -r requirements.txt; fi
    - name: Update version string
      run: |
        sed -i 's/version = ".*"/version = "${{ needs.tag.outputs.release-tag }}"/' pyproject.toml
    - name: Build the package
      run: |
        python -m build
    - name: Persist builds
      uses: actions/upload-artifact@v4
      with:
        name: build-dist-${{ matrix.python-version }}
        path: dist/*

  release:
    needs: [pylint, pytest, build, tag]
    runs-on: self-hosted
    environment:
      name: pypi
      url: https://pypi.org/p/markdown-2-pdf
    permissions:
      contents: write # mandatory to create release
      id-token: write  # mandatory for pypi 'trusted publishing'
    steps:
    - uses: actions/checkout@v3
    - name: Load persisted builds
      uses: actions/download-artifact@v4
      with:
        pattern: build-dist-*
        path: dist/
        merge-multiple: true
    - name: Create body.md
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        touch body.md
        gh api --method POST -H "Accept: application/vnd.github+json" \
          "/repos/${GITHUB_REPOSITORY}/releases/generate-notes" \
          -f tag_name="${{ needs.tag.outputs.release-tag }}" \
          --jq ".body" > "body.md"
    - name: Echo tag
      run: |
        echo "${{ needs.tag.outputs.release-tag }}"
    - name: Create new release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "dist/*"
        bodyFile: "body.md"
        tag: "${{ needs.tag.outputs.release-tag }}"
        commit: "master"
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish to pypi
      uses: pypa/gh-action-pypi-publish@release/v1
